{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HARSHITHA\\\\OneDrive\\\\Desktop\\\\Asgn\\\\asgn.react\\\\src\\\\Dashboard\\\\dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect } from 'react';\n// import Chart from 'chart.js/auto';\n\n// const xValues = [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000];\n\n// const Dashboard = () => {\n//   useEffect(() => {\n//     const canvas = document.getElementById('myChart');\n//     const ctx = canvas.getContext('2d');\n//     let chart = new Chart(ctx, {\n//       type: 'line',\n//       data: {\n//         labels: xValues,\n//         datasets: [\n//             {\n//             label: 'Sales',\n//             data: [860, 1140, 1060, 1060, 1070, 1110, 1330, 2210, 7830, 2478],\n//             borderColor: 'red',\n//             fill: false,\n//           },\n//           {\n//             data: [1600, 1700, 1700, 1900, 2000, 2700, 4000, 5000, 6000, 7000],\n//             borderColor: 'green',\n//             fill: false,\n//           },\n//           {\n//             data: [300, 700, 2000, 5000, 6000, 4000, 2000, 1000, 200, 100],\n//             borderColor: 'blue',\n//             fill: false,\n//           },\n//         ],\n//       },\n//       options: {\n//         legend: { display: false },\n//       },\n//     });\n\n//     return () => {\n//       chart.destroy();\n//     };\n//   }, []);\n\n//   return <canvas id=\"myChart\" style={{ width: '100%', maxWidth: '600px' }}></canvas>;\n// };\n\n// export default Dashboard;\n\nimport React, { useEffect } from 'react';\nimport Style from \"./style.module.dash.css\";\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChartComponent = () => {\n  _s();\n  useEffect(() => {\n    const chartData = {\n      labels: ['Jan 03', 'Jan 07', 'Jan 10', 'Jan 11', 'Jan 12', 'Jan 13', 'Jan 14', 'Jan 17', 'Jan 19', 'Jan 20', 'Jan 21', 'Jan 25', 'Jan 31'],\n      datasets: [{\n        label: 'Expenses',\n        data: [-401, '', -2926.00, -706.82, -1929.59, '', -5000.00, '', -3741.85, -2769, '', -619.00, -3030.00],\n        borderColor: 'red',\n        fill: false,\n        yAxisID: 'y-axis-1'\n      }, {\n        label: 'Income',\n        data: [8, 445.00, 1001.00, 6, 124.00, '', 2070.00, 8169.00, 4100.00, 10000.00, '', '', 19496.00, 706.00],\n        borderColor: 'green',\n        fill: false,\n        yAxisID: 'y-axis-2'\n      }]\n    };\n    const options = {\n      scales: {\n        xAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: 'Date'\n          }\n        }],\n        yAxes: [{\n          id: 'y-axis-1',\n          position: 'left',\n          scaleLabel: {\n            display: true,\n            labelString: 'Expenses (in thousands)'\n          },\n          ticks: {\n            beginAtZero: true,\n            stepSize: 2,\n            callback: value => {\n              return `${value}k`;\n            }\n          }\n        }, {\n          id: 'y-axis-2',\n          position: 'right',\n          scaleLabel: {\n            display: true,\n            labelString: 'Income (in thousands)'\n          },\n          ticks: {\n            beginAtZero: true,\n            stepSize: 2,\n            callback: value => {\n              return `${value}k`;\n            }\n          }\n        }]\n      }\n    };\n    const canvasRef = document.getElementById('myChart');\n    const chart = new Chart(canvasRef, {\n      type: 'line',\n      data: chartData,\n      options\n    });\n    return () => {\n      chart.destroy();\n      /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.graph,\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"myChart\",\n        className: Style.jan,\n        style: {\n          width: '100%',\n          maxWidth: '900px',\n          height: '50%',\n          maxHeight: '400px',\n          alignContent: 'center',\n          marginTop: '30%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(ChartComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ChartComponent;\nexport default ChartComponent;\nvar _c;\n$RefreshReg$(_c, \"ChartComponent\");","map":{"version":3,"names":["React","useEffect","Style","Chart","jsxDEV","_jsxDEV","Fragment","_Fragment","ChartComponent","_s","chartData","labels","datasets","label","data","borderColor","fill","yAxisID","options","scales","xAxes","scaleLabel","display","labelString","yAxes","id","position","ticks","beginAtZero","stepSize","callback","value","canvasRef","document","getElementById","chart","type","destroy","fileName","_jsxFileName","lineNumber","columnNumber","children","className","graph","jan","style","width","maxWidth","height","maxHeight","alignContent","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/HARSHITHA/OneDrive/Desktop/Asgn/asgn.react/src/Dashboard/dashboard.js"],"sourcesContent":["// import React, { useEffect } from 'react';\r\n// import Chart from 'chart.js/auto';\r\n\r\n// const xValues = [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000];\r\n\r\n// const Dashboard = () => {\r\n//   useEffect(() => {\r\n//     const canvas = document.getElementById('myChart');\r\n//     const ctx = canvas.getContext('2d');\r\n//     let chart = new Chart(ctx, {\r\n//       type: 'line',\r\n//       data: {\r\n//         labels: xValues,\r\n//         datasets: [\r\n//             {\r\n//             label: 'Sales',\r\n//             data: [860, 1140, 1060, 1060, 1070, 1110, 1330, 2210, 7830, 2478],\r\n//             borderColor: 'red',\r\n//             fill: false,\r\n//           },\r\n//           {\r\n//             data: [1600, 1700, 1700, 1900, 2000, 2700, 4000, 5000, 6000, 7000],\r\n//             borderColor: 'green',\r\n//             fill: false,\r\n//           },\r\n//           {\r\n//             data: [300, 700, 2000, 5000, 6000, 4000, 2000, 1000, 200, 100],\r\n//             borderColor: 'blue',\r\n//             fill: false,\r\n//           },\r\n//         ],\r\n//       },\r\n//       options: {\r\n//         legend: { display: false },\r\n//       },\r\n//     });\r\n\r\n//     return () => {\r\n//       chart.destroy();\r\n//     };\r\n//   }, []);\r\n\r\n//   return <canvas id=\"myChart\" style={{ width: '100%', maxWidth: '600px' }}></canvas>;\r\n// };\r\n\r\n// export default Dashboard;\r\n\r\nimport React, { useEffect } from 'react';\r\nimport Style from \"./style.module.dash.css\"\r\nimport Chart from 'chart.js/auto';\r\n\r\nconst ChartComponent = () => {\r\n  useEffect(() => {\r\n    const chartData = {\r\n      labels: ['Jan 03', 'Jan 07', 'Jan 10','Jan 11','Jan 12','Jan 13', 'Jan 14', 'Jan 17','Jan 19', 'Jan 20','Jan 21','Jan 25','Jan 31'],\r\n      datasets: [\r\n        {\r\n          label: 'Expenses',\r\n          data: [-401, '' ,-2926.00, -706.82, -1929.59, '',-5000.00,'' , -3741.85, -2769, '',-619.00, -3030.00  ],\r\n          borderColor: 'red',\r\n          fill: false,\r\n          yAxisID: 'y-axis-1',\r\n        },\r\n        {\r\n          label: 'Income',\r\n          data: [8,445.00, 1001.00, 6,124.00,'',2070.00, 8169.00, 4100.00, 10000.00,'','',19496.00, 706.00],\r\n          borderColor: 'green',\r\n          fill: false,\r\n          yAxisID: 'y-axis-2',\r\n        },\r\n      ],\r\n    };\r\n\r\n    const options = {\r\n      scales: {\r\n        xAxes: [{\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: 'Date',\r\n          },\r\n        }],\r\n        yAxes: [\r\n          {\r\n            id: 'y-axis-1',\r\n            position: 'left',\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: 'Expenses (in thousands)',\r\n            },\r\n            ticks: {\r\n              beginAtZero: true,\r\n              stepSize: 2,\r\n              callback: (value) => {\r\n                return `${value}k`;\r\n              },\r\n            },\r\n          },\r\n          {\r\n            id: 'y-axis-2',\r\n            position: 'right',\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: 'Income (in thousands)',\r\n            },\r\n            ticks: {\r\n              beginAtZero: true,\r\n              stepSize: 2,\r\n              callback: (value) => {\r\n                return `${value}k`;\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    const canvasRef = document.getElementById('myChart');\r\n    const chart = new Chart(canvasRef, {\r\n      type: 'line',\r\n      data: chartData,\r\n      options,\r\n    });\r\n\r\n    return () => {\r\n        chart.destroy();\r\n        <div>\r\n            \r\n        </div>\r\n    };\r\n  }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className={Style.graph}>\r\n                <canvas id=\"myChart\" className={Style.jan} style={{ width: '100%', maxWidth: '900px', height: '50%', maxHeight: '400px', alignContent:'center', marginTop:'30%' }} />\r\n            </div>\r\n            </>\r\n    );\r\n\r\n};\r\n\r\nexport default ChartComponent;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}