{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HARSHITHA\\\\OneDrive\\\\Desktop\\\\Asgn\\\\asgn.react\\\\src\\\\Dashboard\\\\dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect } from 'react';\n// import Chart from 'chart.js/auto';\n\n// const xValues = [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000];\n\n// const Dashboard = () => {\n//   useEffect(() => {\n//     const canvas = document.getElementById('myChart');\n//     const ctx = canvas.getContext('2d');\n//     let chart = new Chart(ctx, {\n//       type: 'line',\n//       data: {\n//         labels: xValues,\n//         datasets: [\n//             {\n//             label: 'Sales',\n//             data: [860, 1140, 1060, 1060, 1070, 1110, 1330, 2210, 7830, 2478],\n//             borderColor: 'red',\n//             fill: false,\n//           },\n//           {\n//             data: [1600, 1700, 1700, 1900, 2000, 2700, 4000, 5000, 6000, 7000],\n//             borderColor: 'green',\n//             fill: false,\n//           },\n//           {\n//             data: [300, 700, 2000, 5000, 6000, 4000, 2000, 1000, 200, 100],\n//             borderColor: 'blue',\n//             fill: false,\n//           },\n//         ],\n//       },\n//       options: {\n//         legend: { display: false },\n//       },\n//     });\n\n//     return () => {\n//       chart.destroy();\n//     };\n//   }, []);\n\n//   return <canvas id=\"myChart\" style={{ width: '100%', maxWidth: '600px' }}></canvas>;\n// };\n\n// export default Dashboard;\n\nimport React, { useEffect } from 'react';\n// import Chart from 'chart.js';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartComponent = () => {\n  _s();\n  useEffect(() => {\n    const chartData = {\n      labels: ['Jan 2', 'Jan 4', 'Jan 6', 'Jan 8', 'Jan 10', 'Jan 12', 'Jan 14', 'Jan 16', 'Jan 18', 'Jan 20', 'Jan 22', 'Jan 24', 'Jan 26', 'Jan 28', 'Jan 30'],\n      datasets: [{\n        label: 'Expenses',\n        data: [0, -401, 1, -2000, -790, -135, -1, -1250, -830, -120, -294, -325, -1299, -731],\n        borderColor: 'red',\n        fill: false,\n        yAxisID: 'y-axis-1'\n      }, {\n        label: 'Income',\n        data: [1000, 2000, 2000, 1, 444, 3000, 1000, 1, 124, 2000, 4000, 1250, 820, 2000, 6169, 4100, 10000, 1, 10000, 9495, 706],\n        borderColor: 'green',\n        fill: false,\n        yAxisID: 'y-axis-2'\n      }]\n    };\n    const options = {\n      scales: {\n        xAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: 'Date'\n          }\n        }],\n        yAxes: [{\n          id: 'y-axis-1',\n          position: 'left',\n          scaleLabel: {\n            display: true,\n            labelString: 'Expenses (in thousands)'\n          },\n          ticks: {\n            beginAtZero: true,\n            stepSize: 2,\n            callback: value => {\n              return `${value}k`;\n            }\n          }\n        }, {\n          id: 'y-axis-2',\n          position: 'right',\n          scaleLabel: {\n            display: true,\n            labelString: 'Income (in thousands)'\n          },\n          ticks: {\n            beginAtZero: true,\n            stepSize: 2,\n            callback: value => {\n              return `${value}k`;\n            }\n          }\n        }]\n      }\n    };\n    const canvasRef = document.getElementById('myChart');\n    const chart = new Chart(canvasRef, {\n      type: 'line',\n      data: chartData,\n      options\n    });\n    return () => {\n      chart.destroy();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    id: \"myChart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 10\n  }, this);\n};\n_s(ChartComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ChartComponent;\nexport default ChartComponent;\nvar _c;\n$RefreshReg$(_c, \"ChartComponent\");","map":{"version":3,"names":["React","useEffect","Chart","jsxDEV","_jsxDEV","ChartComponent","_s","chartData","labels","datasets","label","data","borderColor","fill","yAxisID","options","scales","xAxes","scaleLabel","display","labelString","yAxes","id","position","ticks","beginAtZero","stepSize","callback","value","canvasRef","document","getElementById","chart","type","destroy","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HARSHITHA/OneDrive/Desktop/Asgn/asgn.react/src/Dashboard/dashboard.js"],"sourcesContent":["// import React, { useEffect } from 'react';\r\n// import Chart from 'chart.js/auto';\r\n\r\n// const xValues = [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000];\r\n\r\n// const Dashboard = () => {\r\n//   useEffect(() => {\r\n//     const canvas = document.getElementById('myChart');\r\n//     const ctx = canvas.getContext('2d');\r\n//     let chart = new Chart(ctx, {\r\n//       type: 'line',\r\n//       data: {\r\n//         labels: xValues,\r\n//         datasets: [\r\n//             {\r\n//             label: 'Sales',\r\n//             data: [860, 1140, 1060, 1060, 1070, 1110, 1330, 2210, 7830, 2478],\r\n//             borderColor: 'red',\r\n//             fill: false,\r\n//           },\r\n//           {\r\n//             data: [1600, 1700, 1700, 1900, 2000, 2700, 4000, 5000, 6000, 7000],\r\n//             borderColor: 'green',\r\n//             fill: false,\r\n//           },\r\n//           {\r\n//             data: [300, 700, 2000, 5000, 6000, 4000, 2000, 1000, 200, 100],\r\n//             borderColor: 'blue',\r\n//             fill: false,\r\n//           },\r\n//         ],\r\n//       },\r\n//       options: {\r\n//         legend: { display: false },\r\n//       },\r\n//     });\r\n\r\n//     return () => {\r\n//       chart.destroy();\r\n//     };\r\n//   }, []);\r\n\r\n//   return <canvas id=\"myChart\" style={{ width: '100%', maxWidth: '600px' }}></canvas>;\r\n// };\r\n\r\n// export default Dashboard;\r\n\r\nimport React, { useEffect } from 'react';\r\n// import Chart from 'chart.js';\r\nimport Chart from 'chart.js/auto';\r\n\r\nconst ChartComponent = () => {\r\n  useEffect(() => {\r\n    const chartData = {\r\n      labels: ['Jan 2', 'Jan 4', 'Jan 6', 'Jan 8', 'Jan 10', 'Jan 12', 'Jan 14', 'Jan 16', 'Jan 18', 'Jan 20', 'Jan 22', 'Jan 24', 'Jan 26', 'Jan 28', 'Jan 30'],\r\n      datasets: [\r\n        {\r\n          label: 'Expenses',\r\n          data: [0, -401, 1, -2000, -790, -135, -1, -1250, -830, -120, -294, -325, -1299, -731],\r\n          borderColor: 'red',\r\n          fill: false,\r\n          yAxisID: 'y-axis-1',\r\n        },\r\n        {\r\n          label: 'Income',\r\n          data: [1000,\r\n2000,\r\n2000,\r\n1,\r\n444,\r\n3000,\r\n1000,\r\n1,\r\n124,\r\n2000,\r\n4000,\r\n1250,\r\n820,\r\n2000,\r\n6169,\r\n4100,\r\n10000,\r\n1,\r\n10000,\r\n9495,\r\n706\r\n],\r\n          borderColor: 'green',\r\n          fill: false,\r\n          yAxisID: 'y-axis-2',\r\n        },\r\n      ],\r\n    };\r\n\r\n    const options = {\r\n      scales: {\r\n        xAxes: [{\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: 'Date',\r\n          },\r\n        }],\r\n        yAxes: [\r\n          {\r\n            id: 'y-axis-1',\r\n            position: 'left',\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: 'Expenses (in thousands)',\r\n            },\r\n            ticks: {\r\n              beginAtZero: true,\r\n              stepSize: 2,\r\n              callback: (value) => {\r\n                return `${value}k`;\r\n              },\r\n            },\r\n          },\r\n          {\r\n            id: 'y-axis-2',\r\n            position: 'right',\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: 'Income (in thousands)',\r\n            },\r\n            ticks: {\r\n              beginAtZero: true,\r\n              stepSize: 2,\r\n              callback: (value) => {\r\n                return `${value}k`;\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    const canvasRef = document.getElementById('myChart');\r\n    const chart = new Chart(canvasRef, {\r\n      type: 'line',\r\n      data: chartData,\r\n      options,\r\n    });\r\n\r\n    return () => {\r\n      chart.destroy();\r\n    };\r\n  }, []);\r\n\r\n  return <canvas id=\"myChart\" />;\r\n};\r\n\r\nexport default ChartComponent;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}