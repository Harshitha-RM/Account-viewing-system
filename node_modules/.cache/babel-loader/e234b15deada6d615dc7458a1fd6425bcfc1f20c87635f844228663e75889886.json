{"ast":null,"code":"// import React, { useEffect } from 'react';\n// import Chart from 'chart.js/auto';\n\n// const xValues = [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000];\n\n// const Dashboard = () => {\n//   useEffect(() => {\n//     const canvas = document.getElementById('myChart');\n//     const ctx = canvas.getContext('2d');\n//     let chart = new Chart(ctx, {\n//       type: 'line',\n//       data: {\n//         labels: xValues,\n//         datasets: [\n//             {\n//             label: 'Sales',\n//             data: [860, 1140, 1060, 1060, 1070, 1110, 1330, 2210, 7830, 2478],\n//             borderColor: 'red',\n//             fill: false,\n//           },\n//           {\n//             data: [1600, 1700, 1700, 1900, 2000, 2700, 4000, 5000, 6000, 7000],\n//             borderColor: 'green',\n//             fill: false,\n//           },\n//           {\n//             data: [300, 700, 2000, 5000, 6000, 4000, 2000, 1000, 200, 100],\n//             borderColor: 'blue',\n//             fill: false,\n//           },\n//         ],\n//       },\n//       options: {\n//         legend: { display: false },\n//       },\n//     });\n\n//     return () => {\n//       chart.destroy();\n//     };\n//   }, []);\n\n//   return <canvas id=\"myChart\" style={{ width: '100%', maxWidth: '600px', height: '50%', maxHeight: '300px' }}></canvas>;\n// };\n\n// export default Dashboard;\n\nimport React, { useEffect } from 'react';\n// import Style from \"./style.module.dash.css\"\n// import Chart from 'chart.js/auto';\n\n// const ChartComponent = () => {\n//   useEffect(() => {\n//     const chartData = {\n//       labels: ['Jan 03', 'Jan 07', 'Jan 10','Jan 11','Jan 12','Jan 13', 'Jan 14', 'Jan 17','Jan 19', 'Jan 20','Jan 21','Jan 25','Jan 31'],\n//       datasets: [\n//         {\n//           label: 'Expenses',\n//           data: [-401, '' ,-2926.00, -706.82, -1929.59, '',-5000.00,'' , -3741.85, -2769, '',-619.00, -3030.00  ],\n//           borderColor: 'red',\n//           fill: false,\n//           yAxisID: 'y-axis-1',\n//         },\n//         {\n//           label: 'Income',\n//           data: [8,445.00, 1001.00, 6,124.00,'',2070.00, 8169.00, 4100.00, 10000.00,'','',19496.00, 706.00],\n//           borderColor: 'green',\n//           fill: false,\n//           yAxisID: 'y-axis-2',\n//         },\n//       ],\n//     };\n\n//     const options = {\n//       scales: {\n//         xAxes: [{\n//           scaleLabel: {\n//             display: true,\n//             labelString: 'Date',\n//           },\n//         }],\n//         yAxes: [\n//           {\n//             id: 'y-axis-1',\n//             position: 'left',\n//             scaleLabel: {\n//               display: true,\n//               labelString: 'Expenses (in thousands)',\n//             },\n//             ticks: {\n//               beginAtZero: true,\n//               stepSize: 2,\n//               callback: (value) => {\n//                 return `${value}k`;\n//               },\n//             },\n//           },\n//           {\n//             id: 'y-axis-2',\n//             position: 'right',\n//             scaleLabel: {\n//               display: true,\n//               labelString: 'Income (in thousands)',\n//             },\n//             ticks: {\n//               beginAtZero: true,\n//               stepSize: 2,\n//               callback: (value) => {\n//                 return `${value}k`;\n//               },\n//             },\n//           },\n//         ],\n//       },\n//     };\n\n//     const canvasRef = document.getElementById('myChart');\n//     const chart = new Chart(canvasRef, {\n//       type: 'line',\n//       data: chartData,\n//       options,\n//     });\n\n//     return () => {\n//       chart.destroy();\n//     };\n//   }, []);\n\n//     return (\n//         <>\n//             <div className={Style.graph}>\n//                 <canvas id=\"myChart\" />\n//             </div>    \n//         </>\n//     );\n\n// };\n\n// export default ChartComponent;","map":{"version":3,"names":["React","useEffect"],"sources":["C:/Users/HARSHITHA/OneDrive/Desktop/Asgn/asgn.react/src/Dashboard/dashboard.js"],"sourcesContent":["// import React, { useEffect } from 'react';\r\n// import Chart from 'chart.js/auto';\r\n\r\n// const xValues = [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000];\r\n\r\n// const Dashboard = () => {\r\n//   useEffect(() => {\r\n//     const canvas = document.getElementById('myChart');\r\n//     const ctx = canvas.getContext('2d');\r\n//     let chart = new Chart(ctx, {\r\n//       type: 'line',\r\n//       data: {\r\n//         labels: xValues,\r\n//         datasets: [\r\n//             {\r\n//             label: 'Sales',\r\n//             data: [860, 1140, 1060, 1060, 1070, 1110, 1330, 2210, 7830, 2478],\r\n//             borderColor: 'red',\r\n//             fill: false,\r\n//           },\r\n//           {\r\n//             data: [1600, 1700, 1700, 1900, 2000, 2700, 4000, 5000, 6000, 7000],\r\n//             borderColor: 'green',\r\n//             fill: false,\r\n//           },\r\n//           {\r\n//             data: [300, 700, 2000, 5000, 6000, 4000, 2000, 1000, 200, 100],\r\n//             borderColor: 'blue',\r\n//             fill: false,\r\n//           },\r\n//         ],\r\n//       },\r\n//       options: {\r\n//         legend: { display: false },\r\n//       },\r\n//     });\r\n\r\n//     return () => {\r\n//       chart.destroy();\r\n//     };\r\n//   }, []);\r\n\r\n//   return <canvas id=\"myChart\" style={{ width: '100%', maxWidth: '600px', height: '50%', maxHeight: '300px' }}></canvas>;\r\n// };\r\n\r\n// export default Dashboard;\r\n\r\nimport React, { useEffect } from 'react';\r\n// import Style from \"./style.module.dash.css\"\r\n// import Chart from 'chart.js/auto';\r\n\r\n// const ChartComponent = () => {\r\n//   useEffect(() => {\r\n//     const chartData = {\r\n//       labels: ['Jan 03', 'Jan 07', 'Jan 10','Jan 11','Jan 12','Jan 13', 'Jan 14', 'Jan 17','Jan 19', 'Jan 20','Jan 21','Jan 25','Jan 31'],\r\n//       datasets: [\r\n//         {\r\n//           label: 'Expenses',\r\n//           data: [-401, '' ,-2926.00, -706.82, -1929.59, '',-5000.00,'' , -3741.85, -2769, '',-619.00, -3030.00  ],\r\n//           borderColor: 'red',\r\n//           fill: false,\r\n//           yAxisID: 'y-axis-1',\r\n//         },\r\n//         {\r\n//           label: 'Income',\r\n//           data: [8,445.00, 1001.00, 6,124.00,'',2070.00, 8169.00, 4100.00, 10000.00,'','',19496.00, 706.00],\r\n//           borderColor: 'green',\r\n//           fill: false,\r\n//           yAxisID: 'y-axis-2',\r\n//         },\r\n//       ],\r\n//     };\r\n\r\n//     const options = {\r\n//       scales: {\r\n//         xAxes: [{\r\n//           scaleLabel: {\r\n//             display: true,\r\n//             labelString: 'Date',\r\n//           },\r\n//         }],\r\n//         yAxes: [\r\n//           {\r\n//             id: 'y-axis-1',\r\n//             position: 'left',\r\n//             scaleLabel: {\r\n//               display: true,\r\n//               labelString: 'Expenses (in thousands)',\r\n//             },\r\n//             ticks: {\r\n//               beginAtZero: true,\r\n//               stepSize: 2,\r\n//               callback: (value) => {\r\n//                 return `${value}k`;\r\n//               },\r\n//             },\r\n//           },\r\n//           {\r\n//             id: 'y-axis-2',\r\n//             position: 'right',\r\n//             scaleLabel: {\r\n//               display: true,\r\n//               labelString: 'Income (in thousands)',\r\n//             },\r\n//             ticks: {\r\n//               beginAtZero: true,\r\n//               stepSize: 2,\r\n//               callback: (value) => {\r\n//                 return `${value}k`;\r\n//               },\r\n//             },\r\n//           },\r\n//         ],\r\n//       },\r\n//     };\r\n\r\n//     const canvasRef = document.getElementById('myChart');\r\n//     const chart = new Chart(canvasRef, {\r\n//       type: 'line',\r\n//       data: chartData,\r\n//       options,\r\n//     });\r\n\r\n//     return () => {\r\n//       chart.destroy();\r\n//     };\r\n//   }, []);\r\n\r\n//     return (\r\n//         <>\r\n//             <div className={Style.graph}>\r\n//                 <canvas id=\"myChart\" />\r\n//             </div>    \r\n//         </>\r\n//     );\r\n\r\n// };\r\n\r\n// export default ChartComponent;\r\n\r\n"],"mappings":"AAAA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}